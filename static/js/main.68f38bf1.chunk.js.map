{"version":3,"sources":["Form/curriencies.js","Form/Label/index.js","Form/Input/index.js","Form/Select/index.js","Form/Result/index.js","Form/Footer/index.js","Form/Clock/index.js","Form/Buttons/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","id","exchangeRate","name","Label","labelText","body","className","Input","amount","setAmount","value","type","step","min","placeholder","required","autoFocus","onChange","target","Select","currency","setCurrency","map","Result","result","undefined","finalResult","toFixed","Footer","Clock","useState","Date","localDate","setLocalDate","formattedDate","toLocaleString","weekday","day","month","year","hour","minute","second","useEffect","intervalId","setInterval","clearInterval","Buttons","Form","setResult","onSubmit","event","preventDefault","rate","find","calculateResult","onReset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68f38bf1.chunk.js","sourcesContent":["const currencies = [\n    { id: \"EUR\", exchangeRate: 4.5829, name: \"Euro (EUR)\", },\n    { id: \"GBP\", exchangeRate: 5.2908, name: \"Funt brytyjski (GBP)\", },\n    { id: \"USD\", exchangeRate: 3.8066, name: \"Dolar amerykański (USD)\", },\n  ];\n\n  export default currencies;","import './index.css';\n\nconst Label = ({ labelText, body }) => (\n    <label>\n        <span className=\"label\">\n            {labelText}\n        </span>\n        {body}\n    </label>\n);\n\nexport default Label;","import './index.css';\n\nconst Input = ({ amount, setAmount }) => (\n    <input\n        value={amount}\n        className=\"input\"\n        type=\"number\"\n        step=\"0.01\"\n        min=\"0.01\"\n        placeholder=\"Wpisz kwotę\"\n        required\n        autoFocus\n        onChange={({ target }) => setAmount(target.value)}\n    />\n);\n\nexport default Input;","import './index.css';\n\nconst Select = ({ currencies, currency, setCurrency }) => (\n\n    <select\n        className=\"select\"\n        required\n        onChange={({ target }) => setCurrency(target.value)}\n        value={currency}\n    >\n        {currencies.map(currency => (\n            <option key={currency.id} value={currency.id}>\n                {currency.name}\n            </option>\n        ))}\n    </select>\n);\n\nexport default Select;","import './index.css';\n\nconst Result = ({ result }) => (\n    <p className=\"result\">\n        WYNIK:&nbsp;\n        {result !== undefined && (\n            <strong>\n                {result.finalResult.toFixed(2)}&nbsp;{result.currency}\n            </strong>\n        )}\n    </p>\n);\n\nexport default Result;","import './index.css';\n\nconst Footer = ({ body }) => (\n    <footer className=\"footer\">\n        Kurs z dnia 06.05.2021 - według danych z Narodowego Banku Polskiego.\n    </footer>\n);\n\nexport default Footer;","import { useEffect, useState } from \"react\";\nimport './index.css';\n\nconst Clock = () => {\n    const [localDate, setLocalDate] = useState(new Date());\n    const formattedDate = localDate.toLocaleString(undefined, {\n        weekday: \"long\",\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setLocalDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, []);\n\n    return (\n        <div className=\"clock\">Dzisiaj jest {formattedDate}</div>\n    );\n};\n\nexport default Clock;","import './index.css';\n\nconst Buttons = () => (\n    <span className=\"buttons\">\n        <button className=\"buttons__button\">\n            Przelicz kwotę!\n        </button>\n        <button type=\"reset\" className=\"buttons__button\">\n            Wyczyść\n        </button>\n    </span>\n);\n\nexport default Buttons;","import './index.css';\nimport currencies from './curriencies.js';\nimport Label from './Label';\nimport Input from './Input';\nimport Select from './Select';\nimport Result from './Result';\nimport Footer from './Footer';\nimport Clock from './Clock';\nimport Buttons from './Buttons';\nimport { useState } from 'react';\n\n\nconst Form = () => {\n    const [amount, setAmount] = useState(\"\");\n    const [result, setResult] = useState();\n    const [currency, setCurrency] = useState(currencies[0].id);\n\n    const calculateResult = (currency, amount) => {\n        const rate = currencies.find(({ id }) => id === currency).exchangeRate;\n\n        setResult({\n            finalResult: amount / rate,\n            currency,\n        });\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(currency, amount);\n    };\n\n    const onFormReset = () => {\n        setAmount(\"\");\n        setResult();\n    };\n\n    return (\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\n            <Clock />\n            <fieldset className=\"form__fieldset\">\n                <legend className=\"form__legend\">Kantor walut</legend>\n                <p>\n                    <Label\n                        labelText=\"Kwota w złotych (PLN)*:\"\n                        body={<Input amount={amount} setAmount={setAmount} />}\n                    >\n                    </Label>\n                </p>\n                <p>\n                    <Label\n                        labelText=\"Wybierz walutę*:\"\n                        body=\n                        {<Select\n                            currencies={currencies}\n                            currency={currency}\n                            setCurrency={setCurrency}\n                        />}\n                    >\n                    </Label>\n                </p>\n                <Buttons />\n                <Result result={result} />\n                <Footer />\n            </fieldset>\n        </form>\n    );\n};\n\nexport default Form;","import Form from './Form';\n\nfunction App() {\n  return (\n    <Form/>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}